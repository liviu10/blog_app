# Generated by Django 4.1.2 on 2022-10-16 19:02

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(default='', help_text='Insert the author', max_length=255, verbose_name='Author')),
                ('article_time', models.PositiveIntegerField(default=0, help_text="Insert the article's reading, listening or viewing time (number of minutes)", verbose_name='Time')),
                ('article_title', models.CharField(default='', help_text='Insert the title', max_length=255, unique=True, verbose_name='Title')),
                ('article_short_description', models.CharField(default='', help_text='Insert the short description', max_length=255, unique=True, verbose_name='Short description')),
                ('article_url', models.CharField(default='', help_text='Insert the article url', max_length=255, verbose_name='Article URL path')),
                ('is_active', models.BooleanField(blank=True, default=False, help_text='Activate the article?', verbose_name='Active / Inactive?')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 590736), verbose_name='Created date')),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 590736), verbose_name='Updated date')),
            ],
            options={
                'verbose_name_plural': 'Articles',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_title', models.CharField(default='', help_text='Insert the category title', max_length=100, unique=True, verbose_name='Title')),
                ('category_short_description', models.CharField(default='', help_text='Insert the category short description', max_length=255, verbose_name='Short description')),
                ('is_active', models.BooleanField(blank=True, default=False, help_text='Activate the category?', verbose_name='Active / Inactive?')),
                ('image_url', models.CharField(default='', help_text='Insert the category image url path', max_length=255, verbose_name='Image URL')),
                ('category_url', models.CharField(default='', help_text='Insert the category url path', max_length=255, verbose_name='Category URL path')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 589736), verbose_name='Created date')),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 589736), verbose_name='Updated date')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategory_title', models.CharField(default='', help_text='Insert the subcategory title', max_length=100, unique=True, verbose_name='Title')),
                ('subcategory_short_description', models.CharField(default='', help_text='Insert the subcategory short description', max_length=255, verbose_name='Short description')),
                ('is_active', models.BooleanField(blank=True, default=False, help_text='Activate the subcategory?', verbose_name='Active / Inactive?')),
                ('subcategory_url', models.CharField(default='', help_text='Insert the subcategory url path', max_length=255, verbose_name='Subcategory URL path')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 589736), verbose_name='Created date')),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 589736), verbose_name='Updated date')),
                ('category', models.ForeignKey(default='', help_text='Insert the category id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_category', to='blog_posts.category', verbose_name='Blog category')),
            ],
            options={
                'verbose_name_plural': 'Subcategories',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_url', models.CharField(blank=True, default='', help_text='Insert article media url path', max_length=255, verbose_name='Media url path')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 591750), verbose_name='Created date')),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 591750), verbose_name='Updated date')),
                ('article', models.ForeignKey(default='', help_text='Insert the article id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_article_media', to='blog_posts.article', verbose_name='Blog article')),
            ],
            options={
                'verbose_name_plural': 'Article media',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, default='', help_text='Insert article content', max_length=2000, verbose_name='Article content')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 590736), verbose_name='Created date')),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 590736), verbose_name='Updated date')),
                ('article', models.ForeignKey(default='', help_text='Insert the article id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_article_content', to='blog_posts.article', verbose_name='Blog article')),
            ],
            options={
                'verbose_name_plural': 'Article content',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleCommentAppreciation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.PositiveIntegerField(blank=True, default=0, help_text="Insert the article's comment likes", verbose_name='No of likes')),
                ('dislike', models.PositiveIntegerField(blank=True, default=0, help_text="Insert the article's comment dislikes", verbose_name='No of dislikes')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 592760), verbose_name='Created date')),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 592760), verbose_name='Updated date')),
                ('article', models.ForeignKey(default='', help_text='Insert the article id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_article_comment_appreciation', to='blog_posts.article', verbose_name='Blog article')),
                ('user', models.ForeignKey(default='', help_text='Insert the user id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_article_comment_appreciation_user', to=settings.AUTH_USER_MODEL, verbose_name='User ID')),
            ],
            options={
                'verbose_name_plural': 'Article comment appreciation system',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='', help_text='Insert the full name', max_length=255, verbose_name='Full name')),
                ('email', models.CharField(default='', help_text='Insert the email address', max_length=255, verbose_name='Email address')),
                ('comment', models.CharField(default='', help_text='Insert the comment', max_length=255, verbose_name='Comment')),
                ('is_public', models.BooleanField(blank=True, default=False, help_text='Activate the comment?', verbose_name='Public / Private?')),
                ('is_active', models.BooleanField(blank=True, default=False, help_text='Activate the article?', verbose_name='Active / Inactive?')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 591750), verbose_name='Created date')),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 591750), verbose_name='Updated date')),
                ('article', models.ForeignKey(default='', help_text='Insert the article id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_article_comment', to='blog_posts.article', verbose_name='Blog article')),
                ('user', models.ForeignKey(default='', help_text='Insert the user id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_article_comment_user', to=settings.AUTH_USER_MODEL, verbose_name='User ID')),
            ],
            options={
                'verbose_name_plural': 'Article comment system',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleAppreciation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField(blank=True, default=0, help_text="Insert the article's rate system", verbose_name='Rating system')),
                ('like', models.PositiveIntegerField(blank=True, default=0, help_text="Insert the article's likes", verbose_name='No of likes')),
                ('dislike', models.PositiveIntegerField(blank=True, default=0, help_text="Insert the article's dislikes", verbose_name='No of dislikes')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 591750), verbose_name='Created date')),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime(2022, 10, 16, 22, 2, 58, 591750), verbose_name='Updated date')),
                ('article', models.ForeignKey(default='', help_text='Insert the article id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_article_appreciation', to='blog_posts.article', verbose_name='Blog article')),
                ('user', models.ForeignKey(default='', help_text='Insert the user id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_article_appreciation_user', to=settings.AUTH_USER_MODEL, verbose_name='User ID')),
            ],
            options={
                'verbose_name_plural': 'Article appreciation system',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='subcategory',
            field=models.ForeignKey(default='', help_text='Insert the subcategory id', on_delete=django.db.models.deletion.CASCADE, related_name='blog_subcategory', to='blog_posts.subcategory', verbose_name='Blog subcategory'),
        ),
    ]
